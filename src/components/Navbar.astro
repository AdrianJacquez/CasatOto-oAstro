---
// Arrays con las opciones del menú
const opcionesLeft = [
    { title: "Nosotros", href: "#Objetivo" },
    { title: "Estancia", href: "#Estancia" },
    { title: "Habitaciones", href: "#Habitaciones" },
];

const opcionesRigth = [
    { title: "Instalaciones", href: "#Instalaciones" },
    { title: "Actividades", href: "" },
    { title: "Contacto", href: "" },
];

const opcionesMovil = [
    { title: "Nosotros", href: "#Objetivo" },
    { title: "Estancia", href: "#Estancia" },
    { title: "Habitaciones", href: "#Habitaciones" },
    { title: "Instalaciones", href: "#Instalaciones" },
    { title: "Actividades", href: "" },
    { title: "Contacto", href: "" },
];
---

<nav class="menuScroll lg:hidden fixed top-0 z-40 flex justify-between w-full items-center transition-all">
    <a href="#Home" class="logo transition-all w-60 ml-4 mt-3 mb-3">
        <img class="" src="./images/LogoCell.svg" alt="Logo casa otoño movil" />
    </a>

    <div id="menu-button" aria-label="menu" class="burger relative w-14 lg:hidden flex items-center focus:outline-none mr-4 mt-3 z-50">
        <!-- Ícono de menú -->
        <svg id="menu-icon" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-menu-2 duration-500" width="52" height="52" viewBox="0 0 24 24" stroke-width="2" stroke="#FFFFFF" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
            <path d="M4 6l16 0" />
            <path d="M4 12l16 0" />
            <path d="M4 18l16 0" />
        </svg>
        <!-- Ícono de cerrar -->
        <svg id="close-icon" aria-label="cerrar menu" xmlns="http://www.w3.org/2000/svg" class="hidden icon icon-tabler icon-tabler-x " width="32" height="32" viewBox="0 0 24 24" stroke-width="2" stroke="#FFFFFF" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
            <path d="M18 6l-12 12" />
            <path d="M6 6l12 12" />
        </svg>
    </div>

    <!-- Menú móvil -->
    <div id="mobile-menu" class="lg:hidden fixed top-0 right-0 h-screen w-full bg-mmenu transform translate-x-full transition-transform duration-500">
        <div class=" flex items-center pt-14 h-screen">
            
            <ul class="flex flex-col justify-evenly w-full h-[80%] mt-15 z-50">
                {
                    opcionesMovil.map(opcion => (
                        <li class="text-white font-spartan font-normal text-[1.9rem] ml-8">
                            <a class="opcion opcionMovil text-white" href={opcion.href}>{opcion.title}</a>
                        </li>
                    ))
                }
            </ul>
            
        </div>
    </div>
</nav>

<nav class=" menuScroll hidden fixed top-0 z-50 lg:flex justify-around w-screen items-center px-12 py-4">
    
        <ul class="flex justify-around items-center w-full">
            {opcionesLeft.map(opcion => (
            <li class="text-white font-spartan font-normal text-[1.4rem] hover:underline hover:decoration-orange-600 decoration-[3.1px] underline-offset-4 duration-500">
                <a href={opcion.href} class="opcion  brick">{opcion.title}</a>
            </li>
))}
        </ul>
    

   <a href="#Home" class=" w-72 mx-14 "><img class="w-32" src="./images/navOtonoLogo.svg" alt="Logo de casa otoño"></a>

    
        <ul class="flex justify-around items-center w-full">
         {opcionesRigth.map(opcion => (
            <li class="text-white font-spartan font-normal text-[1.4rem] hover:underline hover:decoration-orange-600 decoration-[3.1px] underline-offset-4 duration-500">
                <a href={opcion.href} class="opcion brick">{opcion.title}</a>
            </li>
         ))}
        </ul>
    
</nav>

<style>
    /* Estilos para el menú móvil */
    #mobile-menu {
        transform: translateX(100%);
        opacity: 0;
        transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
    }

    #mobile-menu.open {
        transform: translateX(0);
        opacity: 0.95;
    }

    #close-icon {
        display: none;
    }

    #menu-button.open #menu-icon {
        display: none;
    }

    #menu-button.open #close-icon {
        display: block;
    }

    /* Estilos para el nav */
    nav {
        background-color: transparent;
        color: white;
        box-shadow: none;
        transition: background-color 0.5s ease-in-out, color 0.5s ease-in-out, box-shadow 0.5s ease-in-out;
    }

    nav.scrolled {
        background-color: white;
        color: #582114;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1)
    }

    /* Cambiar el color del ícono del menú (burger) */
    nav.scrolled #menu-icon {
        stroke: #582114; /* Cambia el color del ícono */
    }

    /* Cambiar el color de las letras en el nav de pantallas grandes */
    nav.scrolled .brick {
        color: #582114;
    }
</style>

<script>
    const menuButton = document.querySelector('#menu-button');
    const mobileMenu = document.querySelector('#mobile-menu');
    const menuIcon = document.querySelector('#menu-icon');
    const closeIcon = document.querySelector('#close-icon');
    const menuLinks = document.querySelectorAll<HTMLAnchorElement>('a[href^="#"]');

    const closeMenu = () => {
        // Alternar la clase 'open' en el menú móvil
        mobileMenu?.classList.toggle('open');

        // Alternar la visibilidad de los íconos
        menuIcon?.classList.toggle('hidden');
        closeIcon?.classList.toggle('hidden');

        // Alternar la clase 'open' en el botón
        menuButton?.classList.toggle('open');
    };

    menuButton?.addEventListener('click', () => {
        closeMenu();
    });

    // Cerrar el menú al hacer clic en un enlace y desplazar suavemente
    menuLinks.forEach(link => {
        link.addEventListener('click', (event: MouseEvent) => {
            event.preventDefault(); // Previene el comportamiento por defecto

            if (link.classList.contains('opcion')) {
                closeMenu(); // Cierra el menú si tiene la clase 'opcion'
            }

            const targetId = link.getAttribute('href'); // Obtiene el href
            const targetElement = document.querySelector(targetId);

            if (targetId && targetElement) {
            // Obtén la posición del elemento
            const elementRect = targetElement.getBoundingClientRect();

            if (link.classList.contains('opcionMovil')) {
                const offset = 60;
                 // Calcula la posición final
                const scrollPosition = window.scrollY + elementRect.top - offset;

                    // Desplazamiento suave
                    window.scrollTo({
                        top: scrollPosition,
                        behavior: 'smooth'
                    });
            } else{
                const offset = 100;
                 // Calcula la posición final
                const scrollPosition = window.scrollY + elementRect.top - offset;

                    // Desplazamiento suave
                    window.scrollTo({
                        top: scrollPosition,
                        behavior: 'smooth'
                    });
}
            }

            

           
        });
    });

    window.addEventListener('scroll', () => {
  const scrollPercentage = (window.scrollY / (document.documentElement.scrollHeight - window.innerHeight)) * 100;

  if (scrollPercentage > 5) { 
    const navs = document.querySelectorAll('nav');
    navs.forEach(nav => nav.classList.add('scrolled'));
  } else {
    const navs = document.querySelectorAll('nav');
    navs.forEach(nav => nav.classList.remove('scrolled'));
  }
});
   
</script>